---
dependency:
  name: galaxy
driver:
  name: docker
lint: |
  set -e
  yamllint .
  ansible-lint
platforms:
  - name: rootca-centos7
    image: "geerlingguy/docker-centos7-ansible:latest"
    dockerfile: Dockerfile.centos7.j2
    command: ${MOLECULE_DOCKER_COMMAND:-""}
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
    privileged: true 
    pre_build_image: true
    packages: ['python', 'sudo', 'yum-plugin-ovl', 'bash']
  - name: rootca-centos8
    image: "geerlingguy/docker-centos8-ansible:latest"
    dockerfile: Dockerfile.centos8.j2
    command: ${MOLECULE_DOCKER_COMMAND:-""}
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
    privileged: true 
    pre_build_image: true
    packages: ['bash']
  - name: rootca-ubuntu1804
    image: "geerlingguy/docker-ubuntu1804-ansible:latest"
    dockerfile: Dockerfile.ubuntu1804.j2
    command: ${MOLECULE_DOCKER_COMMAND:-""}
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
    privileged: true 
    pre_build_image: true
    packages: ['python3', 'sudo', 'bash', 'ca-certificates', 'iproute2', 'python3-apt', 'aptitude']
  - name: rootca-ubuntu2004
    image: "geerlingguy/docker-ubuntu2004-ansible:latest"
    dockerfile: Dockerfile.ubuntu2004.j2
    command: ${MOLECULE_DOCKER_COMMAND:-""}
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
    privileged: true 
    pre_build_image: true
    packages: ['python3', 'sudo', 'bash', 'ca-certificates', 'iproute2', 'python3-apt', 'aptitude']
provisioner:
  name: ansible
  lint:
    name: ansible-lint
  playbooks:
    converge: ${MOLECULE_PLAYBOOK:-playbook.yml}
  inventory:
    host_vars:
      rootca-centos8:
        ansible_python_interpreter: /usr/libexec/platform-python
scenario:
  name: default
verifier:
  name: testinfra
  lint:
    name: flake8
