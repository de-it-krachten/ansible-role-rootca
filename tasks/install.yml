---

- name: Install all public CA certificates
  ansible.builtin.package:
    name: ca-certificates
    state: present

- name: Make sure rootca directory exists
  ansible.builtin.file:
    path: "{{ rootca_directory }}"
    state: directory
    owner: root
    group: root
    mode: "0755"

- name: Delete faulty named certificates
  ansible.builtin.file:
    path: "{{ rootca_directory }}/{{ item | basename }}.{{ rootca_ext }}"
    state: absent
  loop: "{{ rootca_certificates }}"

- name: Distribute all root CA certificates into {{ rootca_directory }}
  ansible.builtin.copy:
    src: "{{ item }}"
    dest: "{{ rootca_directory }}/{{ item | basename | regex_replace('\\.(pem|crt)$') }}.{{ rootca_ext }}"
    owner: root
    group: root
    mode: "0644"
  loop: "{{ rootca_certificates }}"
  register: rootca_update1

- name: Append certificate to /etc/ca-certificates.conf
  ansible.builtin.lineinfile:
    path: /etc/ca-certificates.conf
    line: "{{ rootca_directory | basename }}/{{ item | basename | regex_replace('\\.(pem|crt)$') }}.{{ rootca_ext }}"
  loop: "{{ rootca_certificates }}"
  register: rootca_update2
  when: ansible_os_family == 'Debian'

- name: Update CA trust
  ansible.builtin.command: "{{ rootca_update_cmd }}"
  register: rootca_update3
  changed_when: "'0 added' not in rootca_update3.stdout"
  when: rootca_update1.changed or rootca_update2.changed  # noqa no-handler
